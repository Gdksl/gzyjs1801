#!/bin/bash
#1.写一个脚本,运行后要求用户输入出生年份,输出用户的年龄:
#	1).如果用户输入为空,则提示输入不能为空且退出
#	2).如果用户输入为其他字符,则提示无效年份并退出
#read -p "请输入出生年份：" age
#if ! expr $age + 1&>/dev/null ||  [ "$age" == "" ];then
#	echo "不能为非数字或空" && exit
#fi
#nf=`date +%Y`
#[ $age -lt 1900 ]&& echo -e "不能小于1900年，除非你现在超过118岁" && exit
#[ $age -gt $nf ] && echo "${age}年的还没出生呢"&& exit
#echo "您今年是$[$nf-$age]岁"

#*************************************************

#2.写一个脚本,执行后可看到根分区使用情况:
#	1).如果剩余空间在40%以上(包含),则提示: 根分区使用正常,剩余空间为XX
#	2).如果剩余空间低于40%(包含),则提示: 根分区空间不多,剩余空间为XX,请及时清理
#	3).如果剩余空间低于15%(包含),则提示: 根分区空间告急,剩余空间为XX,请立即清理
#aa=$[100-`df -h|awk -F " +|%" '$0~/\/$/{printf $5}'`]
#if [ $aa -ge 40 ]  ;then
#	echo "根分区使用正常，剩余空间为$aa%" 
#elif [ $aa -lt 15 ] ;then
#	echo "根分区空间告急，剩余空间为$aa%，请立即清理" 
#elif [ $aa -lt 40 ];then
#	echo "根分区空间不多，剩余空间为$aa%，请及时清理"
#fi

#**************************************************

#3.改写脚本2,需要接参数才能执行:
#	1).在运行脚本时如果没有参数或参数为--help,则给出脚本的帮助信息.
#	2).如果参数为某分区的话则正常执行
#	3).如果参数不是以上情况则提示参数错误:只能是有效分区
# 截出已用百分比，挂载点

aa=`df -h|awk -F " +|%" '{print $5":"$7}'` 
# 判断输入非空
[ "$1" == "" ]&& echo -e "用法：sh_0824.sh  「挂点名称|分区名最后一位或多位字符」\n 样例：sh_0824.sh  dev" && exit
# 通过循环匹配输入内容,将匹配的分区存放成集合,并且count+=1
count=0
for i in $aa ;do
	str=$str" "`echo $i | egrep $1$ ` && count+=1
done
# 判断是否匹配成功，str 为空则不成功
if [ $count -le 0  ] ;then
	echo "输入错误或没有该分区" && exit
fi
#通过内容集合将匹配的分区遍历输出
#剩余空间在40％含40以上正常，小于40以下及时清理，小于15以下立即清理
for i in $str ;do 
	num=$[100-`echo $i| awk -F ":" '{print $1}'`]
	gzd=`echo $i| awk -F ":" '{print $2}'`
	if [ $num -ge 40 ];then
		echo "${gzd}分区使用正常，剩余空间为$num%" 
	elif [ $num -lt 15 ] ;then
		echo "${gzd}分区空间告急，剩余空间为$num%，请立即清理" 
	elif [ $num -lt 40 ];then
		echo "${gzd}分区空间不多，剩余空间为$num%，请及时清理"
	fi
done
